@model EduzeniethFinal.Models.Course
@{
    ViewBag.Title = "Add Course";
    Layout = "~/Views/Shared/Admin.cshtml";
}
<style>
    .col-md-4 {
        margin-top: 1%;
        max-width: 50%;
        max-height: 30rem;
        overflow-y: auto;
        scrollbar-width: none;
        scrollbar-color: #6969dd #e0e0e0;
        scrollbar-width: 0;
        border-radius: 10%;
    }

    h5 {
        color: white;
        text-align: center;
    }

    .mb-3 {
        align-items: center;
    }

    h2 {
        margin-top: .3rem;
        background-color: gray;
        border-radius: 10px;
        height: fit-content;
        text-align: center;
        width: 80%;
    }
</style>
<div class="row" style=" background: linear-gradient(10deg,rgba(255,255,255,0.1),rgba(255,255,255,0.1)); backdrop-filter: blur(4px);margin-top:10%;">


    <div class="col-md-8">

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="card mb-3" style="background: linear-gradient(10deg,rgba(255,255,255,0.1),rgba(255,255,255,0.1)); backdrop-filter: blur(4px);max-width:100%">
                <h2 class="mb-lg-4 text-light">Add Course</h2>
                <div class="card-body">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <div class="mb-3">
                        <h5>@Html.LabelFor(model => model.Course_Code, htmlAttributes: new { @class = "form-label" })</h5>
                        @Html.EditorFor(model => model.Course_Code, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Course_Code, "", new { @class = "text-danger" })
                    </div>

                    <div class="mb-3">
                        <h5>
                            @Html.LabelFor(model => model.Course_Name, htmlAttributes: new { @class = "form-label" })
                        </h5>
                        @Html.EditorFor(model => model.Course_Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Course_Name, "", new { @class = "text-danger" })
                    </div>

                    <div class="mb-3">
                        <h5>
                            @Html.LabelFor(model => model.teacherID, htmlAttributes: new { @class = "form-label" })
                        </h5>
                        @Html.EditorFor(model => model.teacherID, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.teacherID, "", new { @class = "text-danger" })
                    </div>

                    <div class="mb-3">
                        <h5>
                            @Html.LabelFor(model => model.Course_desc, htmlAttributes: new { @class = "form-label" })
                        </h5>
                        @Html.EditorFor(model => model.Course_desc, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Course_desc, "", new { @class = "text-danger" })
                    </div>

                    <div class="d-grid gap-2">
                        <button type="submit" class="btn btn-primary">Add Course</button>
                    </div>
                </div>
            </div>
        }
    </div>


    <div class="col-md-4">
        <div class="card">
            <div class="card-body">
                <h5 class="card-title mb-3">Guidelines for Adding a Course</h5>
                <ul class="list-group list-group-flush">
                    <li class="list-group-item">Provide a unique Course Code.</li>
                    <li class="list-group-item">Enter a descriptive Course Name.</li>
                    <li class="list-group-item">Assign a Teacher ID for the course instructor.</li>
                    <li class="list-group-item">Describe the course in detail.</li>
                    <li class="list-group-item">Provide a unique Course Code.</li>
                    <li class="list-group-item">Enter a descriptive Course Name.</li>
                    <li class="list-group-item">Assign a Teacher ID for the course instructor.</li>
                    <li class="list-group-item">Describe the course in detail.</li>
                    <li class="list-group-item">Provide a unique Course Code.</li>
                    <li class="list-group-item">Enter a descriptive Course Name.</li>
                    <li class="list-group-item">Assign a Teacher ID for the course instructor.</li>
                    <li class="list-group-item">Describe the course in detail.</li>
                    <li class="list-group-item">Provide a unique Course Code.</li>
                    <li class="list-group-item">Enter a descriptive Course Name.</li>
                    <li class="list-group-item">Assign a Teacher ID for the course instructor.</li>
                    <li class="list-group-item">Describe the course in detail.</li>
                </ul>
            </div>
        </div>
    </div>
</div>


<div class="mt-3">
    @Html.ActionLink("Back to List", "Available_Courses", "Student", null, new { @class = "btn btn-secondary" })
</div>
